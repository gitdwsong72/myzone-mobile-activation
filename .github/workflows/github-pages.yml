name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build React App
      env:
        REACT_APP_API_URL: https://myzone-backend-production.up.railway.app/api/v1
        PUBLIC_URL: /myzone-mobile-activation/app
        GENERATE_SOURCEMAP: false
        REACT_APP_ENVIRONMENT: demo
        REACT_APP_DEMO_MODE: true
        CI: false
        DISABLE_ESLINT_PLUGIN: true
        TSC_COMPILE_ON_ERROR: true
        ESLINT_NO_DEV_ERRORS: true
      run: |
        cd frontend
        npm run build:simple
    
    - name: Prepare deployment
      run: |
        # 기존 docs 백업
        if [ -d docs ]; then
          cp docs/index.html docs/landing.html
        fi
        
        # React 앱을 docs/app에 배치
        mkdir -p docs/app
        cp -r frontend/build/* docs/app/
        
        # 랜딩 페이지 복원 (있다면)
        if [ -f docs/landing.html ]; then
          cp docs/landing.html docs/index.html
        fi
        
        # 404.html을 루트에 배치 (SPA 라우팅 지원)
        cp frontend/build/404.html docs/404.html
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        publish_branch: gh-pages